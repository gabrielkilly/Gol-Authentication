name: Build and Deploy to Cloud Run
run-name: ${{ github.actor }} is deploying to test
on: 
  push: 
    branches:
      - main
env:
  PROJECT_ID: gol-292816
  REPOSITORY: gol-authentication
  SERVICE: authentication
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
jobs:
  test: 
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VAULT_KEY }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VAULT_KEY }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: '_json_key'
          password: '${{ secrets.GCP_SA_KEY }}'
          registry: '${{env.REGISTRY}}'

      - name: Build and Push Container
        run: |-
          docker build -t "${{env.REGISTRY}}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{env.REGISTRY}}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{env.REGISTRY}}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}